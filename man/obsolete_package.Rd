% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/obsolete_package.R
\name{obsolete_package}
\alias{obsolete_package}
\title{Obsolete a DataONE Package with a new version}
\usage{
obsolete_package(mn, metadata_obsolete, metadata_new)
}
\arguments{
\item{mn}{(MNode) The DataONE member node.}

\item{metadata_obsolete}{(character) The metadata PID of the old, or broken, version.
Sets the PID to the beginning of the version chain (the entry at index=1 of the vector
returned by \code{arcticdatautils::get_all_versions}.}

\item{metadata_new}{(character) The metadata PID of the new version. Sets the PID to
the end of the version chain (the last item in the vector returned by
\code{arcticdatautils::get_all_versions}).}
}
\value{
(logical) \code{TRUE}/\code{FALSE}
}
\description{
This function obsoletes a DataONE package with a newer version
by merging the two version chains. The ideal use case for this function is
when the only option to fix a broken package is by re-uploading a previous
version and merging the two version chains. In other cases
\code{\link[arcticdatautils:publish_update]{arcticdatautils::publish_update()}} should be used.
}
\examples{
\dontrun{
cn <- dataone::CNode("STAGING")
mn <- dataone::getMNode(cn,"urn:node:mnTestARCTIC")

pkg_old <- arcticdatautils::create_dummy_package(mn)
pkg_new <- arcticdatautils::create_dummy_package(mn)

obsolete_package(mn, pkg_old$metadata, pkg_new$metadata)
}
}
\author{
Dominic Mullen, \email{dmullen17@gmail.com}
}
